{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amora\\\\CSCE315\\\\CSCE315PRoject3\\\\on-demand\\\\src\\\\views\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react'; // Import CSS styles for Chat page\n\nimport './chat.css'; // Import Bootstrap components from react-bootstrap\n\nimport { FormControl, ListGroup, Card, Row, Col } from 'react-bootstrap';\nimport { useAuth0 } from '@auth0/auth0-react'; // Import the axios library\n\nimport axios from 'axios'; // Import the Pusher JS library\n\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrentUser = () => {\n  _s();\n\n  const {\n    user\n  } = useAuth0();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CurrentUser, \"0/moGN6fHOQfmda34xtpR7VuMpE=\", false, function () {\n  return [useAuth0];\n});\n\n_c = CurrentUser;\nexport class Chat extends Component {\n  // The state is initialized in the constructor and the functions below are bound with 'this'.\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      username: '',\n      messages: []\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // componentWillMount() is invoked immediately before mounting occurs and we are setting the username state to the value gotten from the localStorage.\n\n\n  componentWillMount() {\n    this.setState({\n      username: \"[Username here(Need to get Auth0 nickname)]\"\n    }); // Establish a connection to Pusher.\n\n    this.pusher = new Pusher('0c34ed219ee5573abfa3', {\n      authEndpoint: '/pusher/auth',\n      cluster: 'us2',\n      encrypted: true\n    }); // Subscribe to the 'private-reactchat' channel\n\n    this.chatRoom = this.pusher.subscribe('private-reactchat');\n  } // componentDidMount() is invoked immediately after a component is mounted. Listen for changes to the 'messages' state via Pusher and updates it.\n\n\n  componentDidMount() {\n    this.chatRoom.bind('messages', newmessage => {\n      this.setState({\n        messages: this.state.messages.concat(newmessage)\n      });\n    }, this);\n  } // Used to update the value of the input form in which we type in our chat message\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // This sends the message inside the input form and sends it to Pusher.\n\n\n  sendMessage(event) {\n    event.preventDefault();\n\n    if (this.state.value !== '') {\n      axios.post('/message/send', {\n        username: this.state.username,\n        message: this.state.value\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        value: ''\n      });\n    } else {// console.log('enter message')\n    }\n  }\n\n  render() {\n    // Renders the chat messages\n    const messages = this.state.messages;\n    const message = messages.map(item => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [message, /*#__PURE__*/_jsxDEV(Row, {\n          className: \"show-grid\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatmessage-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: item.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    }); // Renders the input form where the message to be sent is typed.\n\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"show-grid\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.sendMessage,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 5,\n                xsoffset: 3,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  value: this.state.value,\n                  placeholder: \"Enter message here\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn btn-primary\",\n                  value: \"Send\",\n                  type: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-center\",\n              children: [\"Welcome, \", this.state.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-center\",\n              children: \"Begin chatting here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentUser\");","map":{"version":3,"sources":["C:/Users/amora/CSCE315/CSCE315PRoject3/on-demand/src/views/chat.js"],"names":["React","Component","FormControl","ListGroup","Card","Row","Col","useAuth0","axios","Pusher","CurrentUser","user","Chat","constructor","state","value","username","messages","sendMessage","bind","handleChange","componentWillMount","setState","pusher","authEndpoint","cluster","encrypted","chatRoom","subscribe","componentDidMount","newmessage","concat","event","target","preventDefault","post","message","then","response","console","log","catch","error","render","map","item","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// Import CSS styles for Chat page\r\nimport './chat.css'\r\n// Import Bootstrap components from react-bootstrap\r\nimport { FormControl, ListGroup,Card, Row, Col } from 'react-bootstrap';\r\nimport { useAuth0} from '@auth0/auth0-react';\r\n// Import the axios library\r\nimport axios from 'axios'\r\n// Import the Pusher JS library\r\nimport Pusher from 'pusher-js'\r\n\r\nconst CurrentUser = () => {\r\n    const { user } = useAuth0();\r\n    return (<div></div>);\r\n  };\r\n\r\n\r\n\r\n\r\nexport class Chat extends Component {\r\n  // The state is initialized in the constructor and the functions below are bound with 'this'.\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            value: '',\r\n            username: '',\r\n            messages: []\r\n        };\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    // componentWillMount() is invoked immediately before mounting occurs and we are setting the username state to the value gotten from the localStorage.\r\n    componentWillMount() {\r\n        this.setState({ username: \"[Username here(Need to get Auth0 nickname)]\" });\r\n        // Establish a connection to Pusher.\r\n        this.pusher = new Pusher('0c34ed219ee5573abfa3', {\r\n            authEndpoint: '/pusher/auth',\r\n            cluster: 'us2',\r\n            encrypted: true\r\n        });\r\n        // Subscribe to the 'private-reactchat' channel\r\n        this.chatRoom = this.pusher.subscribe('private-reactchat');\r\n    }\r\n    // componentDidMount() is invoked immediately after a component is mounted. Listen for changes to the 'messages' state via Pusher and updates it.\r\n    componentDidMount() {\r\n        this.chatRoom.bind('messages', newmessage => {\r\n            this.setState({messages: this.state.messages.concat(newmessage)})\r\n        }, this);\r\n\r\n    }\r\n    // Used to update the value of the input form in which we type in our chat message\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    // This sends the message inside the input form and sends it to Pusher.\r\n    sendMessage(event) {\r\n        event.preventDefault();\r\n        if (this.state.value !== '') {\r\n            axios.post('/message/send', {\r\n                username: this.state.username,\r\n                message: this.state.value\r\n            })\r\n                .then(response => {\r\n                    console.log(response)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            this.setState({value: ''})\r\n        }\r\n        else {\r\n            // console.log('enter message')\r\n        }\r\n    }\r\n    render() {\r\n        // Renders the chat messages\r\n        const messages = this.state.messages;\r\n        const message = messages.map(item => {\r\n            return (\r\n                <Card>\r\n                    {message}\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={12}>\r\n                            <div className=\"chatmessage-container\">\r\n                                <div key={item.id} className=\"message-box\">\r\n                                    <p><strong>{item.username}</strong></p>\r\n                                    <p>{item.message}</p>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            )\r\n        })\r\n        // Renders the input form where the message to be sent is typed.\r\n        return (\r\n            <ListGroup>\r\n                <Row className=\"show-grid\">\r\n                    <Col xs={12}>\r\n                        {message}\r\n                        <div className=\"chat-container\">\r\n                            <form onSubmit={this.sendMessage}>\r\n                                <Col xs={5} xsoffset={3}>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={this.state.value}\r\n                                        placeholder=\"Enter message here\"\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <input className=\"btn btn-primary\" value=\"Send\" type=\"submit\" />\r\n                                </Col>\r\n                            </form>\r\n                            <h4 className=\"text-center\">Welcome, {this.state.username}</h4>\r\n                            <h5 className=\"text-center\">Begin chatting here.</h5>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}