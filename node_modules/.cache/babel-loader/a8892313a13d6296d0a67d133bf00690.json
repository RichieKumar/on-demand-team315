{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richi\\\\Downloads\\\\CSCE315Project3-master (3)\\\\CSCE315Project3-master\\\\on-demand\\\\src\\\\views\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react'; // Import CSS styles for Chat page\n//import './chat.css'\n// Import Bootstrap components from react-bootstrap\n\nimport { FormControl, ListGroup, Card, Row, Col } from 'react-bootstrap';\nimport { useAuth0 } from '@auth0/auth0-react'; // Import the axios library\n\nimport axios from 'axios'; // Import the Pusher JS library\n\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const {\n    user\n  } = useAuth0();\n  localStorage.setItem(\"user\", user.nickname);\n  return user.nickname;\n};\n\n_s(Example, \"0/moGN6fHOQfmda34xtpR7VuMpE=\", false, function () {\n  return [useAuth0];\n});\n\n_c = Example;\nexport class Chat extends Component {\n  // The state is initialized in the constructor and the functions below are bound with 'this'.\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      username: '',\n      messages: []\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // componentWillMount() is invoked immediately before mounting occurs and we are setting the username state to the value gotten from the localStorage.\n\n\n  componentWillMount() {\n    this.setState({\n      username: localStorage.getItem(\"user\")\n    }); // Establish a connection to Pusher.\n\n    this.pusher = new Pusher('0c34ed219ee5573abfa3', {\n      authEndpoint: '/pusher/auth',\n      cluster: 'us2',\n      encrypted: true\n    }); // Subscribe to the 'private-reactchat' channel\n\n    this.chatRoom = this.pusher.subscribe('private-reactchat'); //user1-user2-private\n  } // componentDidMount() is invoked immediately after a component is mounted. Listen for changes to the 'messages' state via Pusher and updates it.\n\n\n  componentDidMount() {\n    this.chatRoom.bind('messages', newmessage => {\n      this.setState({\n        messages: this.state.messages.concat(newmessage)\n      });\n    }, this);\n  } // Used to update the value of the input form in which we type in our chat message\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // This sends the message inside the input form and sends it to Pusher.\n\n\n  sendMessage(event) {\n    event.preventDefault();\n\n    if (this.state.value !== '') {\n      axios.post('/message/send', {\n        username: this.state.username,\n        message: this.state.value\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        value: ''\n      });\n    } else {// console.log('enter message')\n    }\n  }\n\n  render() {\n    // Renders the chat messages\n    const messages = this.state.messages;\n    const message = messages.map(item => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"show-grid\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatmessage-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: item.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this);\n    }); // Renders the input form where the message to be sent is typed.\n\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"show-grid\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-container\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.sendMessage,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 5,\n                xsoffset: 3,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  value: this.state.value,\n                  placeholder: \"Enter message here\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn btn-primary\",\n                  value: \"Send\",\n                  type: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["C:/Users/richi/Downloads/CSCE315Project3-master (3)/CSCE315Project3-master/on-demand/src/views/chat.js"],"names":["React","Component","FormControl","ListGroup","Card","Row","Col","useAuth0","axios","Pusher","Example","user","localStorage","setItem","nickname","Chat","constructor","state","value","username","messages","sendMessage","bind","handleChange","componentWillMount","setState","getItem","pusher","authEndpoint","cluster","encrypted","chatRoom","subscribe","componentDidMount","newmessage","concat","event","target","preventDefault","post","message","then","response","console","log","catch","error","render","map","item","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// Import CSS styles for Chat page\n//import './chat.css'\n// Import Bootstrap components from react-bootstrap\nimport { FormControl, ListGroup,Card, Row, Col } from 'react-bootstrap';\nimport { useAuth0} from '@auth0/auth0-react';\n// Import the axios library\nimport axios from 'axios'\n// Import the Pusher JS library\nimport Pusher from 'pusher-js'\n\n\n\n\n const Example = () => {\n const { user } = useAuth0();\n localStorage.setItem(\"user\", user.nickname)\n    return user.nickname;\n  }\n\n\nexport class Chat extends Component {\n  // The state is initialized in the constructor and the functions below are bound with 'this'.\n \n    constructor() {\n        super();\n        this.state = {\n            value: '',\n            username: '',\n            messages: []\n        };\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    // componentWillMount() is invoked immediately before mounting occurs and we are setting the username state to the value gotten from the localStorage.\n    componentWillMount() {\n       \n        this.setState({ username: localStorage.getItem(\"user\") });\n        // Establish a connection to Pusher.\n        this.pusher = new Pusher('0c34ed219ee5573abfa3', {\n            authEndpoint: '/pusher/auth',\n            cluster: 'us2',\n            encrypted: true\n        });\n        // Subscribe to the 'private-reactchat' channel\n        this.chatRoom = this.pusher.subscribe('private-reactchat');//user1-user2-private\n    }\n    // componentDidMount() is invoked immediately after a component is mounted. Listen for changes to the 'messages' state via Pusher and updates it.\n    componentDidMount() {\n        this.chatRoom.bind('messages', newmessage => {\n            this.setState({messages: this.state.messages.concat(newmessage)})\n        }, this);\n\n    }\n    // Used to update the value of the input form in which we type in our chat message\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n    // This sends the message inside the input form and sends it to Pusher.\n    sendMessage(event) {\n        event.preventDefault();\n        if (this.state.value !== '') {\n            axios.post('/message/send', {\n                username: this.state.username,\n                message: this.state.value\n            })\n                .then(response => {\n                    console.log(response)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.setState({value: ''})\n        }\n        else {\n            // console.log('enter message')\n        }\n    }\n    render() {\n        // Renders the chat messages\n        const messages = this.state.messages;\n        const message = messages.map(item => {\n            return (\n                <Card>\n \n                    <Row className=\"show-grid\">\n                        <Col xs={12}>\n                            <div className=\"chatmessage-container\">\n                                <div key={item.id} className=\"message-box\">\n                                    <p><strong>{item.username}</strong></p>\n                                    <p>{item.message}</p>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Card>\n            )\n        })\n        // Renders the input form where the message to be sent is typed.\n        return (\n            <ListGroup>\n             \n\n                <Row className=\"show-grid\">\n                    <Col xs={12}>\n                     {message}\n                        <div className=\"chat-container\">\n                            <form onSubmit={this.sendMessage}>\n                                <Col xs={5} xsoffset={3}>\n                                    <FormControl\n                                        type=\"text\"\n                                        value={this.state.value}\n                                        placeholder=\"Enter message here\"\n                                        onChange={this.handleChange}\n                                    />\n                                </Col>\n                                <Col xs={4}>\n                                    <input className=\"btn btn-primary\" value=\"Send\" type=\"submit\" />\n                                </Col>\n                            </form>\n                        </div>\n                    </Col>\n                </Row>\n            </ListGroup>\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}